name: Build and Compile Oyster Linter VS Code Extension

on:
  workflow_dispatch: {}
  pull_request:
    branches:
      - "**"

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.PACKAGE_VERSION }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm ci

      - name: Compile TypeScript
        run: npx tsc -p ./

      - name: Lint code
        run: npx tsc --noEmit

      - name: Build with webpack
        run: npx webpack --config webpack.config.js

      - name: Package VS Code Extension
        if: github.event_name != 'pull_request'
        run: npx vsce package

      - name: Set ENV vars
        id: version
        run: |
          echo "PACKAGE_VERSION=$(cat package.json | jq -r '.version')" >> "$GITHUB_OUTPUT"

      - name: Upload VSIX artifact
        if: github.event_name != 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: oyster-linter-vsix
          path: "*.vsix"

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    permissions:
      contents: write

    steps:
      - name: Download VSIX artifact
        id: download-artifact
        uses: actions/download-artifact@v4
        with:
          path: "vsix"
          name: oyster-linter-vsix

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ needs.build.outputs.version }}
          name: Oyster Linter v.${{ needs.build.outputs.version }}
          files: ${{ steps.download-artifact.outputs.download-path }}/*.vsix

          draft: false
          prerelease: false
          fail_on_unmatched_files: true
          generate_release_notes: true
          make_latest: "true"
